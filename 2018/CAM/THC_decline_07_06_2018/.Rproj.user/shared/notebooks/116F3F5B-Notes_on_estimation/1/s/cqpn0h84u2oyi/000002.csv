"0","ed_model = function( param, x, log = F ) {"
"0","  # Purpose:"
"0","  # Computes the predicted THCCOOH values "
"0","  # using an exponential decay model."
"0","  # Arguments:"
"0","  # param - A vector with the starting level of "
"0","  #         THCCOOH and the elimation rate"
"0","  # x     - A vector with the days since THC "
"0","  #         ingestion"
"0","  # log   - Logical; if TRUE, returns the "
"0","  #         log THCCOOH values instead"
"0","  # Returns:"
"0","  # The predicted log THCCOOH levels per each day."
"0","  "
"0","  yhat = log( param[1] ) - param[2] * x"
"0","  if ( !log ) yhat = exp( yhat )"
"0","  "
"0","  return( yhat )"
"0","}"
"0","mle_ed_tobit = function( param, dat ) {"
"0","  # Purpose:"
"0","  # Computes the negative of the summed log-likelihoods "
"0","  # for a tobit regression approach to fit an "
"0","  # exponential decay model with log-normal error."
"0","  # Arguments:"
"0","  # param - The starting value, elimination rate, and the "
"0","  #         residual standard deviation parameters."
"0","  # dat   - A list with the days since THC ingestion, "
"0","  #         the THCCOOH levels, and the cut-off below "
"0","  #         which values are rounded down to 0."
"0","  # Returns:"
"0","  # The negative of the summed log-likelihoods."
"0","  "
"0","  # Extract data"
"0","  x = dat$x # Independent variable"
"0","  y = dat$y # Dependent variable"
"0","  a = dat$a # Cut-off for censored data"
"0","  "
"0","  # Indicator function for censored data"
"0","  I_a = y < a"
"0","  y_star = y; y_star[ I_a ] = a"
"0","  y_star = log( y_star )"
"0","  "
"0","  # Compute mean"
"0","  mu = ed_model( param[1:2], x, log = T )"
"0","  # Extract standard devation for residuals"
"0","  sigma = param[3]"
"0","  "
"0","  # Carry out tobit regression"
"0","  p1 = I_a * pnorm( ( y_star - mu )/sigma, log.p = T )"
"0","  p2 = (1-I_a) * (dnorm( (y_star - mu)/sigma, log = T )- log( sigma ) )"
"0","  sll = sum( p1 + p2 )"
"0","  if ( is.na( sll ) ) sll = -Inf"
"0","  "
"0","  return( -sll )"
"0","}"
